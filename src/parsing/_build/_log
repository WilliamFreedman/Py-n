### Starting build.
# Target: scanner.mll, tags: { extension:mll, file:scanner.mll, lexer, ocaml, ocamllex, quiet }
/Users/will/.opam/default/bin/ocamllex.opt -q scanner.mll # cached
# Target: scanner.ml.depends, tags: { extension:ml, file:scanner.ml, ocaml, ocamldep, quiet }
/Users/will/.opam/default/bin/ocamldep.opt -modules scanner.ml > scanner.ml.depends # cached
# Target: parser.mly, tags: { extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, parser, quiet }
/Users/will/.opam/default/bin/ocamlyacc parser.mly # cached
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
/Users/will/.opam/default/bin/ocamldep.opt -modules parser.mli > parser.mli.depends # cached
# Target: ast.mli.depends, tags: { extension:mli, file:ast.mli, ocaml, ocamldep, quiet }
/Users/will/.opam/default/bin/ocamldep.opt -modules ast.mli > ast.mli.depends # cached
# Target: ast.cmi, tags: { byte, compile, extension:mli, file:ast.mli, interf, ocaml, quiet }
/Users/will/.opam/default/bin/ocamlc.opt -c -o ast.cmi ast.mli # cached
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet }
/Users/will/.opam/default/bin/ocamlc.opt -c -o parser.cmi parser.mli # cached
# Target: scanner.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:scanner.cmo, file:scanner.ml, implem, ocaml, quiet }
/Users/will/.opam/default/bin/ocamlc.opt -c -o scanner.cmo scanner.ml
+ /Users/will/.opam/default/bin/ocamlc.opt -c -o scanner.cmo scanner.ml
File "scanner.mll", line 92, characters 14-15:
Error: This expression has type Parser.token
       but an expression was expected of type string
Command exited with code 2.
# Compilation unsuccessful.
